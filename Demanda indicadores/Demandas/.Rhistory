FROM Dados.sih.RD
WHERE substr(DT_INTER, 1, 4) > 2019 AND
(DIAG_PRINC = 'B342' OR DIAG_PRINC = 'U071'
OR DIAG_PRINC = 'U072' OR DIAG_PRINC = 'B948'
OR DIAG_PRINC = 'U099' OR DIAG_PRINC = 'M303'
OR DIAG_PRINC = 'U109' OR DIAG_PRINC = 'Y590'
OR DIAG_PRINC = 'U129' OR DIAG_PRINC = 'U921'
OR DIAG_SECUN = 'B342' OR DIAG_SECUN = 'U071'
OR DIAG_SECUN = 'U072' OR DIAG_SECUN = 'B948'
OR DIAG_SECUN = 'U099' OR DIAG_SECUN = 'M303'
OR DIAG_SECUN = 'U109' OR DIAG_SECUN = 'Y590'
OR DIAG_SECUN = 'U129' OR DIAG_SECUN = 'U921') ", as.is = TRUE)
internacoes_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n())
View(internacoes_hospitais_exist)
internacoes_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n())
View(internacoes_hospitais_novos)
internacoes_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n())
internacoes_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n())
obitos_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n())
obitos_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n())
dias_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, uf, cnes) %>%
summarise(dias_medios = mean(dias_perm))
dias_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, uf, cnes) %>%
summarise(dias_medios = mean(dias_perm))
View(dias_hospitais_exist)
dias_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, uf, cnes) %>%
summarise(dias_medios = round(mean(dias_perm),2))
View(dias_hospitais_novos)
dias_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, uf, cnes) %>%
summarise(dias_medios = round(mean(dias_perm),2))
View(dias_hospitais_exist)
internacoes_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais existentes")
internacoes_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais novos")
internacoes_total <- rbind(internacoes_hospitais_exist, internacoes_hospitais_novos)
View(internacoes_total)
View(internacoes_total)
internacoes_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_internacoes = sum(total)) %>%
ggplot(aes(x = ano, y = total_internacoes,
fill = tipo_hosp)) + geom_col(position = "dodge")
internacoes_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_internacoes = sum(total)) %>%
ggplot(aes(x = ano, y = total_internacoes,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
options(scipen = 999)
internacoes_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_internacoes = sum(total)) %>%
ggplot(aes(x = ano, y = total_internacoes,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(g)
g <- internacoes_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_internacoes = sum(total)) %>%
ggplot(aes(x = ano, y = total_internacoes,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(g)
h <- obitos_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_obitos = sum(total)) %>%
ggplot(aes(x = ano, y = total_internacoes,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(h)
obitos_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais existentes")
obitos_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais existentes")
obitos_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais novos")
obitos_total <- rbind(obitos_hospitais_exist, obitos_hospitais_novos)
obitos_total <- rbind(obitos_hospitais_exist, obitos_hospitais_novos)
h <- obitos_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_obitos = sum(total)) %>%
ggplot(aes(x = ano, y = total_internacoes,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(h)
h <- obitos_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_obitos = sum(total)) %>%
ggplot(aes(x = ano, y = total_obitos,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(h)
dias_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano) %>%
summarise(dias_medios = round(mean(dias_perm),2)) %>%
mutate(tipo_hosp = "hospitais novos")
View(dias_hospitais_novos)
dias_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano) %>%
summarise(dias_medios = round(mean(dias_perm),2)) %>%
mutate(tipo_hosp = "hospitais existentes")
View(dias_hospitais_exist)
media_dias_hospitais <- rbind(dias_hospitais_exist, dias_hospitais_novos)
i <- media_dias_hospitais %>%
ggplot(aes(x = ano, y = dias_medio,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(i)
View(media_dias_hospitais)
i <- media_dias_hospitais %>%
ggplot(aes(x = ano, y = dias_medios,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(i)
d <- cnes_novos %>%
ggplot(aes(x = ano, y = total, fill = regiao)) + geom_col(position = "dodge") +
theme_minimal() +  scale_x_continuous(breaks = seq(2020,2021,1)) +
ylab("Quantidade de estabelecimentos") + ggtitle("Quantidade de estabelecimentos existentes em cada ano",
"Fonte: CNES-LT")
plotly::ggplotly(d)
cnes_novos <- rbind(cnes20, cnes21)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(roperators)
if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
options(scipen = 999)
df <- sqlQuery(channel, 'SELECT a.CNES, FANTASIA, RAZ_SOCI, RSOC_MAN,
a.CODUFMUN, municipio_pad, a.uf, regiao, TPGESTAO, a.CPF_CNPJ,
a.NIV_DEP, a.TP_UNID, CODLEITO, QT_EXIST, QT_CONTR, QT_SUS,
QT_NSUS, COMPETEN, competencia
FROM Dados.cnes.LT a
LEFT JOIN Dados.cnes.CADGER b
ON a.CNES = b.CNES
LEFT JOIN "Analytics Layer".Territorial."MunicÃ­pios - Hierarquia Completa" c
ON CAST(a.CODUFMUN AS INT) = c.cod_municipio
WHERE substr(COMPETEN, 1, 4) > 2018')
df$CNES <- as.character(df$CNES)
cnes_2019 <- df %>%
filter(COMPETEN == "201912") %>%
distinct(CNES, FANTASIA, RAZ_SOCI)
cnes_2019c <- cnes_2019$CNES
leitos <- c(51, 52, 96)
cnes_20_21_exist <- df %>%
filter(COMPETEN == "202012" | COMPETEN == "202112") %>%
filter(CNES %in% cnes_2019c) %>%
filter(CODLEITO %in% leitos) %>%
select(COMPETEN, uf, CODUFMUN, municipio_pad, regiao,  CNES, FANTASIA, RAZ_SOCI,
CODLEITO, QT_EXIST)
DT::datatable(cnes_20_21_exist)
c <- cnes_20_21_exist %>%
mutate(Ano = as.integer(substr(COMPETEN, 1, 4))) %>%
group_by(Ano, regiao) %>%
summarise(qtd_existente = sum(QT_EXIST)) %>%
ggplot(aes(x = Ano, y = qtd_existente, col = regiao)) + geom_line() +
scale_x_continuous(breaks = seq(2020,2021,1)) +
theme_minimal() + ylab("Quantidade existente") + ggtitle("Quantidade de leitos existentes",
"Fonte: CNES-LT")
plotly::ggplotly(c)
cnes20 <- cnes_20_21_exist %>%
filter(COMPETEN == "202012") %>%
distinct(CNES, FANTASIA, RAZ_SOCI, uf, regiao) %>%
group_by(regiao) %>%
summarise(total = n()) %>%
mutate(ano = 2020)
cnes20_c <- cnes_20_21_exist %>%
filter(COMPETEN == "202012") %>%
distinct(CNES)
cnes20_c <- cnes20_c$CNES
cnes21 <- cnes_20_21_exist %>%
filter(COMPETEN == "202112") %>%
filter(CNES %ni% cnes20_c) %>%
distinct(CNES, FANTASIA, RAZ_SOCI, uf, regiao) %>%
group_by(regiao) %>%
summarise(total = n()) %>%
mutate(ano = 2021)
cnes_novos <- rbind(cnes20, cnes21)
d <- cnes_novos %>%
ggplot(aes(x = ano, y = total, fill = regiao)) + geom_col(position = "dodge") +
theme_minimal() +  scale_x_continuous(breaks = seq(2020,2021,1)) +
ylab("Quantidade de estabelecimentos") + ggtitle("Quantidade de estabelecimentos existentes em cada ano",
"Fonte: CNES-LT")
plotly::ggplotly(d)
cnes_2019 <- df %>%
filter(COMPETEN == "201912") %>%
distinct(CNES, FANTASIA, RAZ_SOCI)
cnes_2019c <- cnes_2019$CNES
leitos <- c(51, 52, 96)
cnes_20_21_novos <- df %>%
filter(COMPETEN == "202012" | COMPETEN == "202112") %>%
filter(CNES %ni% cnes_2019c) %>%
filter(str_detect(FANTASIA, "covid") | CODLEITO %in% leitos) %>%
select(COMPETEN, uf, CODUFMUN, municipio_pad, regiao,  CNES, FANTASIA, RAZ_SOCI,
CODLEITO, QT_EXIST)
DT::datatable(cnes_20_21_novos)
a <- cnes_20_21_novos %>%
mutate(Ano = as.integer(substr(COMPETEN, 1, 4))) %>%
group_by(Ano, regiao) %>%
summarise(qtd_existente = sum(QT_EXIST)) %>%
ggplot(aes(x = Ano, y = qtd_existente, col = regiao)) + geom_line() +
scale_x_continuous(breaks = seq(2020,2021,1)) +
theme_minimal() + ylab("Quantidade existente") + ggtitle("Quantidade de leitos existentes",
"Fonte: CNES-LT")
plotly::ggplotly(a)
cnes20 <- cnes_20_21_novos %>%
filter(COMPETEN == "202012") %>%
distinct(CNES, FANTASIA, RAZ_SOCI, uf, regiao) %>%
group_by(regiao) %>%
summarise(total = n()) %>%
mutate(ano = 2020)
cnes20_c <- cnes_20_21_novos %>%
filter(COMPETEN == "202012") %>%
distinct(CNES)
cnes20_c <- cnes20_c$CNES
cnes21 <- cnes_20_21_novos %>%
filter(COMPETEN == "202112") %>%
filter(CNES %ni% cnes20_c) %>%
distinct(CNES, FANTASIA, RAZ_SOCI, uf, regiao) %>%
group_by(regiao) %>%
summarise(total = n()) %>%
mutate(ano = 2021)
cnes_novos <- rbind(cnes20, cnes21)
b <- cnes_novos %>%
ggplot(aes(x = ano, y = total, fill = regiao)) + geom_col(position = "dodge") +
theme_minimal() +  scale_x_continuous(breaks = seq(2020,2021,1)) +
ylab("Quantidade de estabelecimentos") + ggtitle("Quantidade de estabelecimentos novos em cada ano",
"Fonte: CNES-LT")
plotly::ggplotly(b)
df3 <- sqlQuery(channel, 'SELECT a.COMPETEN, a.CNES, a.CODUFMUN, municipio_pad, a.uf, regiao, SUM(QT_EXIST) AS QTD
FROM Dados.cnes.EQ a
LEFT JOIN "Analytics Layer".Territorial."MunicÃ­pios - Hierarquia Completa" c
ON CAST(a.CODUFMUN AS INT) = c.cod_municipio
WHERE CAST(CODEQUIP AS INT) = 64
GROUP BY CNES, CODUFMUN, COMPETEN, municipio_pad, a.uf, regiao')
df3_t <- df3 %>%
filter(CNES %in% cnes_2019c) %>%
mutate(mes_ano = lubridate::ym(COMPETEN)) %>%
group_by(regiao, mes_ano) %>%
summarise(total = sum(QTD)) %>%
filter(mes_ano > "2019-12-01") %>%
filter(regiao != "NA")
DT::datatable(df3_t)
e <- df3_t %>%
ggplot(aes(x = mes_ano, y = total, col = regiao)) + geom_line() +
facet_wrap(~regiao, scales = "free_y") + theme_minimal() +
scale_x_date(date_breaks = "1 year") + theme(legend.position="none")
plotly::ggplotly(e)
df_4 <- df3 %>%
filter(CNES %ni% cnes_2019c) %>%
mutate(mes_ano = lubridate::ym(COMPETEN)) %>%
group_by(regiao, mes_ano) %>%
summarise(total = sum(QTD)) %>%
filter(mes_ano > "2019-12-01") %>%
filter(regiao != "NA")
DT::datatable(df_4)
f <- df_4 %>%
ggplot(aes(x = mes_ano, y = total, col = regiao)) + geom_line() +
facet_wrap(~regiao, scales = "free_y") + theme_minimal() +
scale_x_date(date_breaks = "1 year") + theme(legend.position="none")
plotly::ggplotly(f)
internacoes <-
sqlQuery(channel, "SELECT ANO_CMPT, MES_CMPT, UF_ZI, MUNIC_RES, DT_INTER, DT_SAIDA, DIAS_PERM,
MORTE, DIAG_PRINC, DIAG_SECUN, CID_ASSO, CID_MORTE, uf, competencia,
CNES
FROM Dados.sih.RD
WHERE substr(DT_INTER, 1, 4) > 2019 AND
(DIAG_PRINC = 'B342' OR DIAG_PRINC = 'U071'
OR DIAG_PRINC = 'U072' OR DIAG_PRINC = 'B948'
OR DIAG_PRINC = 'U099' OR DIAG_PRINC = 'M303'
OR DIAG_PRINC = 'U109' OR DIAG_PRINC = 'Y590'
OR DIAG_PRINC = 'U129' OR DIAG_PRINC = 'U921'
OR DIAG_SECUN = 'B342' OR DIAG_SECUN = 'U071'
OR DIAG_SECUN = 'U072' OR DIAG_SECUN = 'B948'
OR DIAG_SECUN = 'U099' OR DIAG_SECUN = 'M303'
OR DIAG_SECUN = 'U109' OR DIAG_SECUN = 'Y590'
OR DIAG_SECUN = 'U129' OR DIAG_SECUN = 'U921') ", as.is = TRUE)
internacoes %>%
group_by(DIAG_PRINC) %>%
count()
internacoes %>%
group_by(DIAG_SECUN) %>%
count()
internacoes_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais existentes")
internacoes_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais novos")
internacoes_total <- rbind(internacoes_hospitais_exist, internacoes_hospitais_novos)
g <- internacoes_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_internacoes = sum(total)) %>%
ggplot(aes(x = ano, y = total_internacoes,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(g)
obitos_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais existentes")
obitos_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
filter(morte == 1) %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano, mes_ano, uf, cnes) %>%
summarise(total = n()) %>%
mutate(tipo_hosp = "hospitais novos")
obitos_total <- rbind(obitos_hospitais_exist, obitos_hospitais_novos)
h <- obitos_total %>%
group_by(ano, tipo_hosp) %>%
summarise(total_obitos = sum(total)) %>%
ggplot(aes(x = ano, y = total_obitos,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(h)
dias_hospitais_exist <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %in% cnes_2019c) %>%
group_by(ano) %>%
summarise(dias_medios = round(mean(dias_perm),2)) %>%
mutate(tipo_hosp = "hospitais existentes")
dias_hospitais_novos <-
internacoes %>%
janitor::clean_names() %>%
mutate(mes_ano = substr(dt_inter, 1, 6),
mes_ano = lubridate::ym(mes_ano),
ano = lubridate::year(mes_ano)) %>%
filter(cnes %ni% cnes_2019c) %>%
group_by(ano) %>%
summarise(dias_medios = round(mean(dias_perm),2)) %>%
mutate(tipo_hosp = "hospitais novos")
media_dias_hospitais <- rbind(dias_hospitais_exist, dias_hospitais_novos)
i <- media_dias_hospitais %>%
ggplot(aes(x = ano, y = dias_medios,
fill = tipo_hosp)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(i)
