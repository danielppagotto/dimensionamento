V0001 == "Distrito Federal")
htpc <- subset(tpc, C006 == "Homem")
mtpc <- subset(tpc, C006 == "Mulher")
#Empregador
hempregador <- subset(empregador, C006 == "Homem")
mempregador <- subset(empregador, C006 == "Mulher")
#Empregado
hempregado <- subset(empregado, C006 == "Homem")
mempregado <- subset(empregado, C006 == "Mulher")
id1_sul_tpc <- svymean(~J01101, tpc_sul, na.rm = TRUE)
id1_sul_tpc
id2tpc_goias <- svymean(~J01301, tpc_goias, na.rm = TRUE)
id2tpc_goias
tpc_sem_instrucao <- subset(tpc, VDD004A == "Sem instrução")
tpc_fund_incomp <- subset(tpc, VDD004A == "Fundamental incompleto ou equivalente")
tpc_fund_comp <- subset(tpc, VDD004A == "Fundamental completo ou equivalente")
tpc_medio_incomp <- subset(tpc, VDD004A == "Médio incompleto ou equivalente")
tpc_medio_comp <- subset(tpc, VDD004A == "Médio completo ou equivalente")
tpc_sup_incomp <- subset(tpc, VDD004A == "Superior incompleto ou equivalente")
tpc_sup_comp <- subset(tpc, VDD004A == "Superior completo")
dadospns_df <- as.data.frame(dadospns)
View(tpc_sem_instrucao)
library(ggrepel)
library(srvyr); library(tidyverse); library(vroom); library(readxl); library(patchwork);
tipotrabalho_sexo <- dadospns %>%
group_by(E01401, C006) %>%
summarise(proportion_sexo = survey_mean(),
total = survey_total())
teste <- as_survey_design(dadospns)
tipotrabalho_sexo <- teste %>%
group_by(E01401, C006) %>%
summarise(proportion_sexo = survey_mean(),
total = survey_total())
View(tipotrabalho_sexo)
tipotrabalho_sexo <- teste %>%
filter(E01401 == "Empregador" | E01401 == "Empregado do setor privado"|
E01401 == "Conta própria") %>%
group_by(E01401, C006) %>%
summarise(proportion_sexo = survey_mean(),
total = survey_total())
View(tipotrabalho_sexo)
View(teste)
tipotrabalho_sexo2 <- teste %>%
filter(E01401 == "Empregador" | E01401 == "Empregado do setor privado"|
E01401 == "Conta própria") %>%
group_by(E01401, C006) %>%
summarise(proportion_sexo = survey_mean(),
total = survey_total())
tipotrabalho_sexo_uf <- teste %>%
filter(E01401 == "Empregador" | E01401 == "Empregado do setor privado"|
E01401 == "Conta própria") %>%
group_by(V001, E01401, C006) %>%
summarise(proportion_sexo = survey_mean(),
total = survey_total())
tipotrabalho_sexo_uf <- teste %>%
filter(E01401 == "Empregador" | E01401 == "Empregado do setor privado"|
E01401 == "Conta própria") %>%
group_by(V0001, E01401, C006) %>%
summarise(proportion_sexo = survey_mean(),
total = survey_total())
View(tipotrabalho_sexo2)
tipotrabalho_sexo2 <- teste %>%
group_by(E01401, C006) %>%
summarise(proportion_sexo = survey_mean(),
total = survey_total()) %>%
filter(E01401 == "Empregador" | E01401 == "Empregado do setor privado"|
E01401 == "Conta própria")
View(tipotrabalho_sexo2)
install.packages("sparklyr")
library(sparklyr)
spark_install(version = "2.1.0")
sc <- spark_connect(master = "local")
sc <- spark_connect(master = "local")
sc <- spark_connect(master = "local")
spark_installed_versions()
sc <- spark_connect(master = "local", version = "2.1.0")
sc <- spark_connect(master = "local", log = "console",
config = list(sparklyr.verbose = TRUE))
spark_home <- Sys.getenv("SPARK_HOME")
spark_home <- sparklyr::spark_home_dir()
system2(
file.path(spark_home, "bin", "spark-submit"),
c(
"--master", "local",
"--class", "org.apache.spark.examples.SparkPi",
dir(file.path(spark_home, "examples", "jars"),
pattern = "spark-examples", full.names = TRUE),
100),
stderr = FALSE
)
dir(system.file("java", package = "sparklyr"),
pattern = "sparklyr", full.names = T)
sc <- spark_connect(master = "sparklyr://localhost:8880/42", version = "2.3")
sc <- spark_connect(master = "local", version = "2.3")
sc <- spark_connect(master = "local", version = "2.1.0")
library(sparklyr)
sc <- spark_connect(master = "local", version = "2.1.0")
reticulate::repl_python()
import pyodbc, pandas
!pip install pyodbc
!pip install pyodbc
!apt-get -qq install -y pyodbc
!pip install pyodbc
dremio_host = "200.137.215.27"
dremio_port = "31010"
dremio_uid = "daniel"
dremio_pwd = "p7USWgsqaEH3CWe"
driver = "Dremio Connector"
cnxn = pyodbc.connect("Driver={};ConnectionType=Direct;HOST={};PORT={};AuthenticationType=Plain;UID={};PWD={}".format(driver, dremio_host,dremio_port,dremio_uid,dremio_pwd),
autocommit=True)
sql = '''SELECT CODMUNRES, competencia AS ANO, TO_DATE(DTNASC, 'DDMMYYYY') AS DIA_NASCIMENTO, COUNT(*) AS NASCIMENTOS
FROM Dados.sinasc.DN
dataframe = pandas.read_sql(sql,cnxn)
dataframe.head()
library(haven)
NE_AGG_020_SPSS_22MAR18 <- read_sav("LAPEI/PSED/NE_AGG_020_SPSS_22MAR18.SAV")
View(NE_AGG_020_SPSS_22MAR18)
microdatasus::fetch_datasus(year_start = 2019, month_start = 1, year_end = 2019,
month_end = 1, uf = "RR", information_system = "CNES-PF")
setwd("~/GitHub/dimensionamento/Saúde bucal")
setwd("~/GitHub/dimensionamento/Saúde bucal")
options(scipen = 999)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
df_sb <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População IBGE por estado e faixa etária selecionada"')
View(df_sb)
df_sb %>%
filter(FAIXA_ETARIA == "0 a 14") %>%
mutate(procedimentos_curativos = 1.5 * TOTAL,
cobertura_endodontia = 0.8 * TOTAL,
proced_endodontia = 0.1 * cobertura_endodontia)
setwd("~/GitHub/dimensionamento/Saúde bucal")
options(scipen = 999)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA)
df_sb0_14 <-
df_sb %>%
filter(FAIXA_ETARIA == "0 a 14") %>%
mutate(proced_curativos = 1.5 * TOTAL,
cobertura_endodontia = 0.8 * TOTAL,
proced_endodontia = 0.1 * cobertura_endodontia) %>%
filter(ano > 2019)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA)
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL)
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_col() +
theme_minimal()
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento/12)) + geom_col() +
theme_minimal()
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total/12, fill = procedimento)) + geom_col() +
theme_minimal()
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
)
b <- df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_line() +
theme_minimal()
plotly::ggplotly(b)
df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
)
library(readxl)
coberturasb_go <- read_excel("GitHub/dimensionamento/saude bucal/coberturasb_go.xls")
View(coberturasb_go)
setwd("~/GitHub/dimensionamento/saude bucal")
options(scipen = 999)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readxl)
if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
df_sb <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População IBGE por estado e faixa etária selecionada"')
df_cobertura <- readxl::read_excel("GitHub/dimensionamento/saude bucal/coberturasb_go.xls")
df_sb <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População IBGE por estado e faixa etária selecionada"')
df_cobertura <- readxl::read_excel("GitHub/dimensionamento/saude bucal/coberturasb_go.xls")
library(readxl)
coberturasb_go <- read_excel("GitHub/dimensionamento/saude bucal/coberturasb_go.xls")
View(coberturasb_go)
setwd("~/GitHub/dimensionamento/saude bucal")
setwd("~/GitHub/dimensionamento/saude bucal")
df_sb <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População IBGE por estado e faixa etária selecionada"')
df_cobertura <- read_delim("GitHub/dimensionamento/saude bucal/coberturasb_go.csv",
";", escape_double = FALSE, trim_ws = TRUE)
setwd("~/GitHub/dimensionamento/saude bucal")
df_cobertura <- read_delim("GitHub/dimensionamento/saude bucal/coberturasb_go.csv",
";", escape_double = FALSE, trim_ws = TRUE)
df_sb <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População IBGE por estado e faixa etária selecionada"')
df_cobertura <- read_delim("GitHub/dimensionamento/saude bucal/coberturasb_go.csv",
";", escape_double = FALSE, trim_ws = TRUE)
df_sb <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População IBGE por estado e faixa etária selecionada"')
df_cobertura <- read_delim("GitHub/dimensionamento/saude bucal/coberturasb_go.csv",
";", escape_double = FALSE, trim_ws = TRUE)
coberturasb_go <- read_delim("coberturasb_go.csv",
";", escape_double = FALSE, trim_ws = TRUE)
setwd("~/GitHub/dimensionamento/saude bucal")
options(scipen = 999)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readxl)
if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
df_sb15_29 <-
df_sb %>%
filter(uf == 'GO') %>%
filter(FAIXA_ETARIA == "15 a 29") %>%
mutate(cobertura = TOTAL * 0.24) %>%
mutate(proced_curativos = 2.6 * cobertura,
cobertura_periodontia = 0.101 * cobertura,
proced_periodontia = 0.10 * cobertura_periodontia,
cobertura_cirurgia = 0.099 * cobertura,
proced_cirurgia = 0.20 * cobertura_cirurgia,
cobertura_endodontia = 0.1 * cobertura,
proced_endodontia = 0.1 * cobertura_endodontia,
cobertura_protese = 0.137 * cobertura,
proced_protese = 0.027 * cobertura_protese) %>%
filter(ano > 2019)
DT::datatable(df_sb15_29)
View(df_sb)
setwd("~/GitHub/dimensionamento/saude bucal")
options(scipen = 999)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(readxl)
if (!require(RODBC)) { install.packages(RODBC); require(RODBC) }
dremio_host <- "200.137.215.27"
dremio_port <- "31010"
dremio_uid <- "daniel"
dremio_pwd <- Sys.getenv("datalake")
channel <- odbcDriverConnect(sprintf("DRIVER=Dremio Connector;HOST=%s;PORT=%s;UID=%s;PWD=%s;AUTHENTICATIONTYPE=Basic Authentication;CONNECTIONTYPE=Direct", dremio_host, dremio_port, dremio_uid, dremio_pwd))
df_sb <- sqlQuery(channel, 'SELECT * FROM "Analytics Layer".Territorial."População IBGE por estado e faixa etária selecionada"')
df_cobertura <- read_delim("coberturasb_go.csv",
";", escape_double = FALSE, trim_ws = TRUE)
DT::datatable(df_cobertura)
df_sb15_29 <-
df_sb %>%
filter(uf == 'GO') %>%
filter(FAIXA_ETARIA == "15 a 29") %>%
mutate(cobertura = TOTAL * 0.24) %>%
mutate(proced_curativos = 2.6 * cobertura,
cobertura_periodontia = 0.101 * cobertura,
proced_periodontia = 0.10 * cobertura_periodontia,
cobertura_cirurgia = 0.099 * cobertura,
proced_cirurgia = 0.20 * cobertura_cirurgia,
cobertura_endodontia = 0.1 * cobertura,
proced_endodontia = 0.1 * cobertura_endodontia,
cobertura_protese = 0.137 * cobertura,
proced_protese = 0.027 * cobertura_protese) %>%
filter(ano > 2019)
DT::datatable(df_sb15_29)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_col() +
theme_minimal()
plotly::ggplotly(c)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_col(position = "stack") +
theme_minimal()
plotly::ggplotly(c)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_col(position = "dodge") +
theme_minimal()
plotly::ggplotly(c)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_line() +
theme_minimal()
plotly::ggplotly(c)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, col = procedimento)) + geom_line() +
theme_minimal()
plotly::ggplotly(c)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, col = procedimento)) + geom_line() +
theme_minimal() + facet_wrap(~procedimento, scales = "free_y")
plotly::ggplotly(c)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, col = procedimento)) + geom_line() +
theme_minimal() + facet_wrap(~procedimento, scales = "free_y") +
scale_x_continuous(breaks = seq(2020, 2030, 2))
plotly::ggplotly(c)
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, col = procedimento)) + geom_line() +
theme_minimal() + facet_wrap(~procedimento, scales = "free_y") +
scale_x_continuous(breaks = seq(2020, 2030, 3))
c <- df_sb15_29 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, col = procedimento)) + geom_line() +
theme_minimal() + facet_wrap(~procedimento, scales = "free_y") +
scale_x_continuous(breaks = seq(2020, 2030, 3))
plotly::ggplotly(c)
DT::datatable(df_sb30_59 %>% select(-starts_with("cobertura")))
df_sb30_59 <-
df_sb %>%
filter(uf == 'GO') %>%
filter(FAIXA_ETARIA == "30 a 59") %>%
mutate(cobertura = TOTAL * 0.24) %>%
mutate(proced_curativos = 4.1 * cobertura,
cobertura_periodontia = 0.179 * cobertura,
proced_periodontia = 0.12 * cobertura_periodontia,
cobertura_cirurgia = 0.164 * cobertura,
proced_cirurgia = 0.32 * cobertura_cirurgia,
cobertura_endodontia = 0.10 * cobertura,
proced_endodontia = 0.11 * cobertura_endodontia,
cobertura_protese = 0.687 * cobertura,
proced_protese = 0.138 * cobertura_protese) %>%
filter(ano > 2019)
DT::datatable(df_sb30_59 %>% select(-starts_with("cobertura")))
df_sb15_29 <-
df_sb %>%
filter(uf == 'GO') %>%
filter(FAIXA_ETARIA == "15 a 29") %>%
mutate(cobertura = TOTAL * 0.24) %>%
mutate(proced_curativos = 2.6 * cobertura,
cobertura_periodontia = 0.101 * cobertura,
proced_periodontia = 0.10 * cobertura_periodontia,
cobertura_cirurgia = 0.099 * cobertura,
proced_cirurgia = 0.20 * cobertura_cirurgia,
cobertura_endodontia = 0.1 * cobertura,
proced_endodontia = 0.1 * cobertura_endodontia,
cobertura_protese = 0.137 * cobertura,
proced_protese = 0.027 * cobertura_protese) %>%
filter(ano > 2019)
DT::datatable(df_sb15_29) %>% select(-starts_with("cobertura"))
b <- df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_col() +
facet_wrap(~procedimento, scales = "free_y") +   scale_x_continuous(breaks = seq(2020, 2030, 3)) +
theme_minimal()
df_sb0_14 <-
df_sb %>%
filter(uf == 'GO') %>%
filter(FAIXA_ETARIA == "0 a 14") %>%
mutate(cobertura = TOTAL * 0.24) %>%
mutate(proced_curativos = 1.5 * cobertura,
cobertura_endodontia = 0.08 * cobertura,
proced_endodontia = 0.1 * cobertura_endodontia) %>%
filter(ano > 2019)
DT::datatable(df_sb0_14)
b <- df_sb0_14 %>%
select(-uf, -FAIXA_ETARIA, -cobertura, -TOTAL, -cobertura_endodontia) %>%
pivot_longer(
cols = starts_with("proced"),
names_to = "procedimento",
values_to = "total",
) %>%
ggplot(aes(x = ano, y = total, fill = procedimento)) + geom_col() +
facet_wrap(~procedimento, scales = "free_y") +   scale_x_continuous(breaks = seq(2020, 2030, 3)) +
theme_minimal()
plotly::ggplotly(b)
DT::datatable(df_sb0_14 %>% select(-starts_with("cobertura")))
